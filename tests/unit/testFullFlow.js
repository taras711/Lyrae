const Token = require("../../core/token/Token")
const LoginScenario = require("../../scenarios/login/LoginScenario")
const LoginSector = require("../../sectors/login/loginSector")
const ActionExecutor = require("../../services/executor/ActionExecutor")
const ComponentRenderer = require("../../components/ComponentRenderer")

console.log("üöÄ Spou≈°t√≠m FullFlow test...\n")

// 1Ô∏è‚É£ Vytvo≈ôen√≠ tokenu
const token = new Token({
  userId: "USR-501",
  role: "admin",
  trustScore: 0.83
})

// 2Ô∏è‚É£ Inicializace sc√©n√°≈ôe s kontextem
const context = { session: {} }
const scenario = new LoginScenario(context)
scenario.run({ id: "USR-501", valid: true, trustScore: token.trustScore })

// 3Ô∏è‚É£ Sektorov√© vyhodnocen√≠
const serverReply = { type: "success" }
const sector = new LoginSector(context, token)
const actions = sector.resolve(serverReply)

// 4Ô∏è‚É£ Vykon√°n√≠ akc√≠
const executor = new ActionExecutor(context, token)
const actionOutput = executor.run(actions)

// 5Ô∏è‚É£ Zobrazen√≠ komponenty
const renderer = new ComponentRenderer(context)
const renderOutput = renderer.render()

// üìã V√Ωpis
console.log("üìù Log sc√©n√°≈ôe:")
console.log(scenario.getLog().join("\n"))

console.log("\n‚öôÔ∏è Akce sektoru:")
console.log(actionOutput.join("\n"))

console.log("\nüñºÔ∏è Komponenta:")
console.log(renderOutput.join("\n"))

console.log("\nüîê Token audit mode:", token.auditMode ? "‚úÖ Aktivn√≠" : "‚ùå Neaktivn√≠")